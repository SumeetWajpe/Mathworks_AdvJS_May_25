(()=>{"use strict";function t(o){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(o)}function o(t,o){for(var r=0;r<o.length;r++){var e=o[r];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,n(e.key),e)}}function n(o){var n=function(o,n){if("object"!=t(o)||!o)return o;var r=o[Symbol.toPrimitive];if(void 0!==r){var e=r.call(o,n);if("object"!=t(e))return e;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(o)}(o,"string");return"symbol"==t(n)?n:n+""}var r=function(){return t=function t(o,n){!function(t,o){if(!(t instanceof o))throw new TypeError("Cannot call a class as a function")}(this,t),this.x=o,this.y=n},(n=[{key:"toString",value:function(){return"(X : ".concat(this.x,",  Y : ").concat(this.y,")")}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n}();console.log("The addition is : ".concat(30)),console.log("The subtraction is : ".concat(10));var e=new r(10,20);console.log("The point is : ".concat(e.toString()))})();